{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorie","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","props","categories","c","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,mCACA,sBAAMC,SAZU,SAACC,GAEjBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAa,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACpCN,EAAc,MAMlB,SACI,uBAAOO,KAAK,OAAOC,MAAOT,EAAYU,SAjBrB,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,e,+BCNjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,6BAFR,oCAEQ,SAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCaLO,EAbK,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAC7B,OACI,sBAAKc,UAAU,0BAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCyCDO,EArCC,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAWd,ECjBwB,SAACA,GAGzB,MAA0Bd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAjBAC,qBAAW,WACPxB,EAAQC,GACHwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAG1B,CAACpB,IASGqB,EDTwBK,CAAa1B,GAAhCa,EAAZ,EAAON,KAAaa,EAApB,EAAoBA,QAKpB,OACI,qCACI,oBAAIJ,UAAU,qBAAd,SAAoChB,IACnCoB,GAAW,mBAAGJ,UAAU,iBAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eACIA,GADgBA,EAAIC,aEKjCgB,EAjCM,SAAAC,GAIjB,MAAmC1C,mBAAS,CAAC,WAA7C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAQA,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,aAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWpB,KAAI,SAAAqB,GAAC,OACZ,cAAC,EAAD,CAAmB9B,SAAY8B,GAAfA,Y,MCtBxCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.bb37ee07.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategorie}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n   const handleInputChange = (e) => {\r\n       setInputValue(e.target.value);\r\n   }\r\n\r\n   const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n            setCategorie(cat => [inputValue, ...cat,]);\r\n            setInputValue('');\r\n        }\r\n\r\n   }\r\n    return (\r\n        <>\r\n        <form onSubmit={handleSubmit} > \r\n            <input type=\"text\" value={inputValue} onChange={handleInputChange} />\r\n        </form>\r\n        </>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategorie: PropTypes.func.isRequired\r\n}\r\n","\r\nconst apiKey = 'b5TAo6A2F30YkM2cMDMmDwAODpSSU40S';\r\n\r\nexport const getGifs = async(category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${apiKey}`\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs =  data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    return gifs;\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"card animate__heartBeat\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nGifGridItem.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGridItem\r\n","// import React, { useEffect, useState } from 'react'\r\n// import PropTypes from 'prop-types'\r\n// import GifGridItem from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\"\r\nimport GifGridItem from \"./GifGridItem\";\r\n\r\n\r\n\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // useEffect(() => {\r\n    //     getGifs(category)\r\n    //         .then(setImages)\r\n    // }, [ category ]);\r\n\r\n    \r\n    const {data:images, loading} = useFetchGifs(category);\r\n\r\n    \r\n    // getGifs();\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__heartBeat\">{category}</h3>\r\n            {loading && <p className=\"animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem key = {img.id}\r\n                        {...img}\r\n                        />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nGifGrid.propTypes = {\r\n\r\n}\r\n\r\nexport default GifGrid\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    \r\n    \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    \r\n\r\n    useEffect( () => {\r\n        getGifs(category)\r\n            .then(imgs => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n            })\r\n    }, [category]);\r\n    // setTimeout(() => {\r\n    //    setstate( {\r\n    //     data: [1,2,3,4,5],\r\n    //     loading: false\r\n    //    })\r\n    // }, 3000);\r\n\r\n\r\n    return state;\r\n}\r\n\r\n","\r\nimport React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {AddCategory} from '../src/components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = props => {\r\n\r\n\r\n\r\n    const [categories, setCategorie] = useState(['Naruto']);\r\n\r\n    // const hanldeAdd = () => {\r\n    //     setCategorie([...categories,'Senya']);\r\n\r\n    //     // Forma 2 por funcion\r\n    //     // setCategorie(c => [...c, 'Senya']);\r\n    // }\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategorie={ setCategorie } />\r\n            <hr />\r\n            \r\n            <ol>\r\n                { \r\n                    categories.map(c => (\r\n                        <GifGrid key = {c} category = {c} />\r\n                        ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nGifExpertApp.propTypes = {\r\n\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}